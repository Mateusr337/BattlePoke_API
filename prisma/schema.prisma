// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String @unique
  email    String @unique
  points   Int    @default(0)
  password String
  level    String @default("0")
  imageURL String

  PokemonUser PokemonUser[]


  Battle Battle[]
  @@map("users")
}

model Pokemon {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  life       Int
  attack     Int
  imageURL   String
  evolution  String?

  pokemonUser   PokemonUser[]
  battlePokemon BattlePokemon[]
  pokemonLevel  PokemonLevel[]
  pokemonType   PokemonType[]

  @@map("pokemons")
}

model PokemonUser {
  id        Int     @id @default(autoincrement())
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
  pokemonId Int
  user      User    @relation(fields: [userId], references: [id])
  userId    Int

  @@map("pokemonsUsers")
}

model Category {
  id     Int    @id @default(autoincrement())
  name   String @unique
  number String @unique

  pokemon Pokemon[]
  @@map("categories")
}

model Type {
  id   Int    @id @default(autoincrement())
  name String @unique

  pokemonType PokemonType[]
  @@map("types")
}

model PokemonType {
  id        Int     @id @default(autoincrement())
  typeId    Int
  type      Type    @relation(fields: [typeId], references: [id])
  pokemonId Int
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])

  @@map("pokemonsTypes")
}

model Battle {
  id     Int      @id @default(autoincrement())
  userId Int
  user   User     @relation(fields: [userId], references: [id])
  Level  Int
  finish Boolean?
  wins   Boolean?

  battlePokemon BattlePokemon[]
  @@map("battles")
}

model BattlePokemon {
  id        Int     @id @default(autoincrement())
  battleId  Int
  battle    Battle  @relation(fields: [battleId], references: [id])
  pokemonId Int
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])

  @@map("battlesUsersPokemons")
}

model PokemonLevel {
  id        Int     @id @default(autoincrement())
  level     Int
  pokemonId Int
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])

  @@map("pokemonsLevels")
}

model Session {
  id    Int    @id @default(autoincrement())
  token String @unique

  @@map("sessions")
}
